package com.internousdev.ec2.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.convention.annotation.Action;   //ゼロコンフィグレーション
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;   //ゼロコンフィグレーション
import org.apache.struts2.convention.annotation.Results;  //ゼロコンフィグレーション
import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.SessionAware;

//		一般的に・・・
	import com.opensymphony.xwork2.ActionSupport;

	//==============================================//
//													//
//		Struts2										//
//		セッション、リクエストのサンプル			//
//													//
	//==============================================//
	@Results({
		@Result(name="success", type="json", params={"root", "session"})
	})
	@ParentPackage("json-default")
	public class HelloAction extends ActionSupport implements SessionAware,ServletRequestAware{
		private String name;						//	sタグの変数
		private String msg;

		private Map<String,Object> session;			//	セッションの宣言

		//	sタグで必要なアクセサ
	    public String getName() {
	        return name;
	    }

	    public void setName(String name) {
	        this.name = name;
	    }

	    public String getMsg() {
	        return msg;
	    }

	    public void setMsg(String msg) {
	        this.msg = msg;
	    }

		//	セッションで必要なアクセサ
		public void setSession(Map<String,Object> session) {
			this.session = session;
		}

		//	（３）リクエストで必要なアクセサ記述
		public void setServletRequest(HttpServletRequest request) {
			this.request = request;
		}

		public HttpServletRequest getServletRequest() {
			return this.request;
		}


		@Action("hello")
	    public String execute()
	    {
	  	    //======================================//
	  	    //		値の取得						//
	  	    //======================================//
	    	// name取得
			setName(getServletRequest().getParameter("name"));

	    	//	セッションでの取得
	  	    int	kai;
	  	    String kaistr = (String)session.get("kaisu");
	  	    if ( kaistr	==	null)
	  	    {
	  	    	kai	=	0;
	  	    }
	  	    else
	  	    {
	  	    	kai = Integer.parseInt(kaistr);
	  	    }

	  	    //	（４）リクエストパラメタでの取得
	  	    String start = getServletRequest().getParameter("start");
	  	    if (start	!=	null)
	  	    {
	  	    	try
	  	    	{
	  	    		kai =  Integer.parseInt(start);
	  	    	}
	  	    	catch(Exception e)
	  	    	{
	  	    		//	数字でなかったら、なにもしない
	  	    	}
	  	    }


	  	    //======================================//
	  	    //		処理							//
	  	    //======================================//
	  	    kai++;		//	今回の分を足す
	  	    String msg = "Hello World" + name + ":"+ kai+"回目";


	  	    //======================================//
	  	    //		出力								//
	  	    //======================================//
	  		//	セッション書き出し
	  		session.put("kaisu", String.valueOf(kai));
	  		session.put("msg", msg);

	        this.addActionMessage("成功1");
	        return SUCCESS;
	    }
}
